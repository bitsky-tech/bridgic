[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agent-tracer"
version = "0.1.0"
description = "A framework-agnostic tracing library for AI agents and LLM applications"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Agent Tracer Contributors" },
]
keywords = [
    "tracing",
    "observability",
    "ai",
    "agents",
    "llm",
    "langsmith",
    "langfuse",
    "langwatch",
    "arize",
    "phoenix",
    "opik",
    "traceloop"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
langsmith = [
    "langsmith>=0.1.0",
    "langchain>=0.1.0",
]
langfuse = [
    "langfuse>=2.0.0",
]
langwatch = [
    "langwatch>=0.1.0",
    "nanoid>=2.0.0",
    "langchain-core>=0.1.0",
]
arize-phoenix = [
    "arize-phoenix-otel>=0.1.0",
    "openinference-instrumentation-langchain>=0.1.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
]
opik = [
    "opik>=0.1.0",
    "langchain-core>=0.1.0",
]
traceloop = [
    "traceloop-sdk>=0.1.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
]
all = [
    "langsmith>=0.1.0",
    "langchain>=0.1.0",
    "langfuse>=2.0.0",
    "langwatch>=0.1.0",
    "nanoid>=2.0.0",
    "arize-phoenix-otel>=0.1.0",
    "openinference-instrumentation-langchain>=0.1.0",
    "opik>=0.1.0",
    "traceloop-sdk>=0.1.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "langchain-core>=0.1.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/agent-tracer"
Documentation = "https://github.com/yourusername/agent-tracer#readme"
Repository = "https://github.com/yourusername/agent-tracer"
Issues = "https://github.com/yourusername/agent-tracer/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/agent_tracer"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312']

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

